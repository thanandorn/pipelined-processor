//
// Module Processor.processor.struct
//
// Created:
//          by - tron.UNKNOWN (CISCOIX)
//          at - 02:14:29 04/12/2009
//
// Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
//

`resetall
`timescale 1ns/10ps
module processor( 
   Reset, 
   SystemClk
);


// Internal Declarations

input   Reset;
input   SystemClk;


wire         Reset;
wire         SystemClk;

// Local declarations

// Internal signal declarations
wire        Clk;
wire [2:0]  Func;
wire [15:0] INSTRUCTION;
wire [7:0]  MemDataOut;
wire        MemWt;
wire [3:0]  OpCode;
wire        PCSource;
wire [7:0]  RAMAddress;
wire [7:0]  ROMAddress;
wire        RdAddrSel;
wire        RegWt;
wire [1:0]  WtDataSel;
wire        Zero;
wire [7:0]  dout;
wire        q;
wire        q1;

// ModuleWare signal declarations(v1.7) for instance 'I3' of 'adff'
reg mw_I3reg_cval;

// ModuleWare signal declarations(v1.7) for instance 'I5' of 'adff'
reg mw_I5reg_cval;

// ModuleWare signal declarations(v1.7) for instance 'I4' of 'ramsp'
reg [7:0] mw_I4addr_reg;
reg [7:0] mw_I4ram_table[((9'b1<<8) -1):0];
integer mw_I4i;
initial
begin
   for (mw_I4i= 0;mw_I4i<= ((9'b1<<8) -1);mw_I4i= mw_I4i+1)
      mw_I4ram_table[mw_I4i] = 8'd0;
end


// Instances 
InstructionROM I0( 
   .ADDR        (ROMAddress), 
   .INSTRUCTION (INSTRUCTION)
); 

control_pipelined I2( 
   .OpCode    (OpCode), 
   .Zero      (Zero), 
   .Func      (Func), 
   .LoadInst  (Clk), 
   .MemWt     (MemWt), 
   .PCSource  (PCSource), 
   .RdAddrSel (RdAddrSel), 
   .RegWt     (RegWt), 
   .WtDataSel (WtDataSel)
); 

datapath I1( 
   .DataIn        (dout), 
   .Func          (Func), 
   .InstructionIn (INSTRUCTION), 
   .LoadInstr     (Clk), 
   .PCSource      (PCSource), 
   .RdAddrSel     (RdAddrSel), 
   .RegWt         (RegWt), 
   .Reset         (Reset), 
   .SystemClk     (SystemClk), 
   .WtDataSel     (WtDataSel), 
   .MemDataOut    (MemDataOut), 
   .OpCode        (OpCode), 
   .RAMAddress    (RAMAddress), 
   .ROMAddress    (ROMAddress), 
   .Zero          (Zero)
); 


// ModuleWare code(v1.7) for instance 'I3' of 'adff'
assign q = mw_I3reg_cval;
always @(negedge SystemClk or posedge Reset)
begin : i3seq_proc
   if (Reset)
      mw_I3reg_cval = 1'd0;
   else
      mw_I3reg_cval = MemWt;
end

// ModuleWare code(v1.7) for instance 'I5' of 'adff'
assign q1 = mw_I5reg_cval;
always @(negedge SystemClk or posedge Reset)
begin : i5seq_proc
   if (Reset)
      mw_I5reg_cval = 1'd0;
   else
      mw_I5reg_cval = q;
end

// ModuleWare code(v1.7) for instance 'I4' of 'ramsp'
// pragma attribute ram_table block_ram false;
always @(posedge SystemClk)
begin : i4ram_p_proc
   if (q1) begin
      mw_I4ram_table[RAMAddress] = MemDataOut;
   end
   mw_I4addr_reg = RAMAddress;
end
assign dout = mw_I4ram_table[mw_I4addr_reg];

endmodule // processor

